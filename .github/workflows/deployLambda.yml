name: Build and Deploy Lamdba


on:
  push:
    branches: [ main ]

  workflow_dispatch:

jobs:
  build_deploy:

    # runner
    runs-on: ubuntu-latest

    steps:

      # checkout repository
      - name: Checkout repository
        uses: actions/checkout@v2

      # Java JDK 11
      - name: set JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11.0.4
      
      # Build
      - name: Build Artifact
        run: |     
          mvn clean install -DskipTests=true         
          cp ./target/serverless-0.0.1-SNAPSHOT.jar .
      # mvn clean install -Dmaven.test.skip=true was
      # AWS CLI pre-installed in Ubuntu-Latest

      # AWS Credentials
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          AWS_ACCESS_KEY_ID: ${{secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: us-east-1

      # Upload Artifacts to S3
      - name: Upload Artifacts
        run: |
          aws s3 cp serverless-0.0.1-SNAPSHOT.jar s3://${{ secrets.S3_BUCKET_NAME }}


      - name: Set and Upload App spec .yml
        run: |
          output_currVersion=$(aws lambda get-alias --function-name Email --name EmailNotificationAlias)
          currVersion=$(jq '.FunctionVersion' <<< "$output_currVersion")
          output_targetVersion=$(aws lambda update-function-code \
          --function-name Email \
          --s3-bucket ${{ secrets.S3_BUCKET_NAME}} \
          --s3-key serverless-0.0.1-SNAPSHOT.jar \
          --publish)
          targetVersion=$(jq '.Version' <<< "$output_targetVersion")
          echo $output_targetVersion
          cat > "appspec.yml" <<- EOM
          version: 0.0
          Resources:
            - Email:
                Type: AWS::Lambda::Function
                Properties:
                  Name: "Email"
                  Alias: "EmailNotificationAlias"
                  CurrentVersion: $currVersion
                  TargetVersion: $targetVersion
          EOM
          cat appspec.yml
          aws s3 cp appspec.yml s3://${{ secrets.S3_BUCKET_NAME }} 

      # Deploy lambda
      - name: Deploy Lambda
        run: |
          output=$(aws deploy create-deployment \
          --application-name "Email" \
          --deployment-config-name CodeDeployDefault.LambdaAllAtOnce  \
          --deployment-group-name "csye6225-emailNotification-deployment" \
          --description "deploy lambda" \
          --s3-location bucket=${{ secrets.S3_BUCKET_NAME }},bundleType=YAML,key=appspec.yml \
          --region us-east-1 \
          --output json)
          echo $output
          dId=$(echo $output | jq -r '.deploymentId')
          aws deploy wait deployment-successful --deployment-id $dId